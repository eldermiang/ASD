# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# Trigger CI pipeline on commits to all branches
trigger:
  branches:
    include:
    - '*'

# Trigger CI pipeline on Pull Request into main
pr:
- main

stages:
- stage: Build
  displayName: Build the web application
  jobs:
  - job: 'Build'
    pool:
      vmImage: 'ubuntu-latest'
      demands: 
      - npm

    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '16.x'
      displayName: 'Install Node.js'

    - script: |
        cd frontend
        npm install
      displayName: 'npm install frontend'
      
    - script: |
        cd backend
        npm install
      displayName: 'npm install backend'

    - task: DownloadSecureFile@1
      name: mySecureFile
      inputs:
        secureFile: '.env'
      
    - task: Npm@1
      displayName: 'npm build'
      inputs:
        workingDir: frontend/
        command: custom
        customCommand: run build
      
    - task: CopyFiles@2
      inputs:
        sourceFolder: $(Agent.TempDirectory)
        contents: $(mySecureFile.secureFilePath)
        targetFolder: frontend/
    - task: Npm@1
      displayName: 'npm run test frontend'
      inputs:
        workingDir: frontend/
        command: custom
        customCommand: run ci:unit
      
    - task: Npm@1
      displayName: 'npm run test backend'
      inputs:
        workingDir: 'backend/'
        command: 'custom'
        customCommand: 'run ci:unit'

    - task: PublishTestResults@2
      displayName: 'Publish Test Results junit.xml'
      condition: succeededOrFailed()
      inputs:
        testResultsFiles: '**/junit.xml'

    - task: ArchiveFiles@2
      displayName: 'Archive files'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)'
        includeRootFolder: false
        archiveType: zip
        archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
        replaceExistingArchive: true

    - upload: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
      artifact: drop
- stage: Deploy
  displayName: Deploy the web application
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    environment: dev
    variables:
    - group: Release
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Deploy Azure Web App Service'
            inputs:
              azureSubscription: 'asd-proj-connect'
              appName: 'burger-joint-demo-asd'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'