# Node.js with React
# Build a Node.js project that uses React.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

# Trigger CI pipeline on commits to all branches
trigger:
  branches:
    include:
    - '*'

# Trigger CI pipeline on Pull Request into main
pr:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '16.x'
  displayName: 'Install Node.js'

- script: |
    cd frontend
    npm install
  displayName: 'npm install frontend'
  
- script: |
    cd backend
    npm install
  displayName: 'npm install backend'

- task: DownloadSecureFile@1
  name: mySecureFile
  inputs:
    secureFile: '.env'
  
- task: Npm@1
  displayName: 'npm build'
  inputs:
    workingDir: frontend/
    command: custom
    customCommand: run build
  
- task: CopyFiles@2
  inputs:
    sourceFolder: $(Agent.TempDirectory)
    contents: $(mySecureFile.secureFilePath)
    targetFolder: frontend/
- task: Npm@1
  displayName: 'npm run test frontend'
  inputs:
    workingDir: frontend/
    command: custom
    customCommand: run ci:unit
  
- task: Npm@1
  displayName: 'npm run test backend'
  inputs:
    workingDir: 'backend/'
    command: 'custom'
    customCommand: 'run ci:unit'

- task: PublishTestResults@2
  displayName: 'Publish Test Results junit.xml'
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/junit.xml'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: '*.tgz' 
    targetFolder: $(Build.ArtifactStagingDirectory)/npm
  displayName: 'Copy npm package'

- task: CopyFiles@2
  inputs:
    sourceFolder: '$(Build.SourcesDirectory)'
    contents: 'package.json' 
    targetFolder: $(Build.ArtifactStagingDirectory)/npm
  displayName: 'Copy package.json'   

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/npm'
    artifactName: npm
  displayName: 'Publish npm artifact'
# - task: Npm@1
#   displayName: Publish release
#   inputs:
#     command: 'publish'
#     publishRegistry: 'useFeed'
#     publishFeed: '3eaa1418-7323-41c8-b44a-31878da72e5a/dae4a809-ff9e-491a-882e-dee35e2371d2'

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: $(Build.ArtifactStagingDirectory)/Release
#     ArtifactName: ASDBuild
